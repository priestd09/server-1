package [[ .fragmenta_resource ]]actions

import (
	"github.com/fragmenta/router"
	"github.com/fragmenta/view"

	"[[ .fragmenta_app_path ]]/[[ .fragmenta_resources ]]"
    "[[ .fragmenta_app_path ]]/lib/authorise"
)

// HandleShow displays a single [[ .fragmenta_resource ]]
func HandleShow(context router.Context) error {

	// Find the [[ .fragmenta_resource ]]
	[[ .fragmenta_resource ]], err := [[ .fragmenta_resources ]].Find(context.ParamInt("id"))
	if err != nil {
		return router.InternalError(err)		
	}

	// Authorise access
	err = authorise.Resource(context,[[ .fragmenta_resource ]]) 
    if err != nil {
		return router.NotAuthorizedError(err)	
    }

	// Render the template
	view := view.New(context)
    view.AddKey("[[ .fragmenta_resource ]]", [[ .fragmenta_resource ]])
    return view.Render()
}
